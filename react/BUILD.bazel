package(default_visibility = ["//visibility:public"])

load("@npm_bazel_typescript//:index.bzl", "ts_library", "ts_devserver")
load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")

ts_library(
    name = "app",
    srcs = ["App.tsx", "lib.ts"],
    deps = [
        "@npm//react",
        "@npm//react-dom",
    ],
#    deps = ["//lexer", "//parser", "//interpreter"],
)

# filegroup(
#     name = "app",
#     srcs = ["App.tsx", "lib.js"],
#     data = [
#         "App.css",
#         "logo.svg",
#         # "@npm//is-builtin-module",
#         # "@npm//rollup",
#         # "@npm//rollup-plugin-babel",
#         # "@npm//rollup-plugin-commonjs",
#         # "@npm//rollup-plugin-includepaths",
#         "@npm//@rollup/plugin-node-resolve",
#         # "@npm//rollup-plugin-sourcemaps",
#         # "@npm//rollup-plugin-replace",
#         "@npm//rollup-plugin-terser",
#         # "@npm//@babel/plugin-transform-react-jsx",
#         # "@npm//@babel/core",
#         # "@npm//@babel/preset-react",
#     ],
# )



rollup_bundle(
    name = "bundle",
#    srcs = [":app"],
    entry_point = "App.tsx",
    deps = [
        ":app",
        "@npm//react",
        "@npm//react-dom",
        "@npm//@rollup/plugin-node-resolve",
        "@npm//rollup-plugin-terser",
        "@npm//@rollup/plugin-commonjs",
    ],
    config_file = "rollup.config.js",
)

ts_devserver(
    name = "devserver",
    port = 3141,
    deps = [
        ":bundle",
    ],
    static_files = [
        "index.html",
    ],
#    entry_module = 'react/App',
    serving_path = "/dist/bin/react/bundle.js",
)
# terser_minified(
#     name = "out.min",
#     src = ":app",
# #    config_file = "terser_config.json",
# )
